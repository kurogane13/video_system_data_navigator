<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Secure Access Portal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: radial-gradient(ellipse at center, #1a0f2e 0%, #0f0a1a 25%, #2d1a3e 50%, #1a0f2e 75%, #050508 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }
        
        /* Alien atmosphere effect */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(120, 255, 214, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 120, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(120, 120, 255, 0.1) 0%, transparent 50%);
            animation: alienGlow 8s ease-in-out infinite alternate;
            z-index: 0;
        }
        
        @keyframes alienGlow {
            0% { opacity: 0.3; transform: scale(1); }
            100% { opacity: 0.7; transform: scale(1.1); }
        }
        
        /* Animated background particles */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }
        
        .particle {
            position: absolute;
            border-radius: 50%;
            pointer-events: none;
            animation: alienFloat 25s infinite linear;
        }
        
        .particle:nth-child(1) { 
            width: 3px; height: 3px; left: 10%; 
            background: radial-gradient(circle, #78ffd6, transparent);
            animation-delay: 0s; animation-duration: 20s;
        }
        .particle:nth-child(2) { 
            width: 5px; height: 5px; left: 20%; 
            background: radial-gradient(circle, #ff78ff, transparent);
            animation-delay: 3s; animation-duration: 25s;
        }
        .particle:nth-child(3) { 
            width: 2px; height: 2px; left: 30%; 
            background: radial-gradient(circle, #7878ff, transparent);
            animation-delay: 6s; animation-duration: 18s;
        }
        .particle:nth-child(4) { 
            width: 4px; height: 4px; left: 40%; 
            background: radial-gradient(circle, #78ffd6, transparent);
            animation-delay: 9s; animation-duration: 22s;
        }
        .particle:nth-child(5) { 
            width: 6px; height: 6px; left: 50%; 
            background: radial-gradient(circle, #ff78ff, transparent);
            animation-delay: 12s; animation-duration: 28s;
        }
        .particle:nth-child(6) { 
            width: 3px; height: 3px; left: 60%; 
            background: radial-gradient(circle, #7878ff, transparent);
            animation-delay: 15s; animation-duration: 20s;
        }
        .particle:nth-child(7) { 
            width: 4px; height: 4px; left: 70%; 
            background: radial-gradient(circle, #78ffd6, transparent);
            animation-delay: 18s; animation-duration: 24s;
        }
        .particle:nth-child(8) { 
            width: 2px; height: 2px; left: 80%; 
            background: radial-gradient(circle, #ff78ff, transparent);
            animation-delay: 21s; animation-duration: 19s;
        }
        .particle:nth-child(9) { 
            width: 5px; height: 5px; left: 90%; 
            background: radial-gradient(circle, #7878ff, transparent);
            animation-delay: 24s; animation-duration: 26s;
        }
        .particle:nth-child(10) { 
            width: 3px; height: 3px; left: 95%; 
            background: radial-gradient(circle, #78ffd6, transparent);
            animation-delay: 27s; animation-duration: 21s;
        }
        .particle:nth-child(11) { 
            width: 4px; height: 4px; left: 15%; 
            background: radial-gradient(circle, #ff78ff, transparent);
            animation-delay: 5s; animation-duration: 23s;
        }
        .particle:nth-child(12) { 
            width: 2px; height: 2px; left: 65%; 
            background: radial-gradient(circle, #7878ff, transparent);
            animation-delay: 11s; animation-duration: 17s;
        }
        
        @keyframes alienFloat {
            0% {
                transform: translateY(100vh) translateX(0px) rotate(0deg) scale(0.5);
                opacity: 0;
                filter: blur(2px);
            }
            10% {
                opacity: 1;
                filter: blur(0px);
            }
            25% {
                transform: translateY(75vh) translateX(20px) rotate(90deg) scale(1);
            }
            50% {
                transform: translateY(50vh) translateX(-15px) rotate(180deg) scale(1.2);
                opacity: 0.8;
            }
            75% {
                transform: translateY(25vh) translateX(10px) rotate(270deg) scale(0.8);
            }
            90% {
                opacity: 1;
                filter: blur(0px);
            }
            100% {
                transform: translateY(-10vh) translateX(0px) rotate(360deg) scale(0.3);
                opacity: 0;
                filter: blur(3px);
            }
        }
        
        .login-container {
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(66, 133, 244, 0.3);
            border-radius: 20px;
            padding: 40px;
            width: 100%;
            max-width: 420px;
            box-shadow: 
                0 20px 60px rgba(0, 0, 0, 0.5),
                0 0 0 1px rgba(255, 255, 255, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
            position: relative;
            z-index: 2;
            animation: slideUp 0.8s ease-out;
        }
        
        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .header {
            text-align: center;
            margin-bottom: 35px;
        }
        
        .security-badge {
            display: inline-block;
            background: linear-gradient(135deg, #4285f4, #0f3460);
            color: white;
            padding: 8px 16px;
            border-radius: 25px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(66, 133, 244, 0.3);
        }
        
        .system-title {
            color: #ffffff;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
            text-shadow: 0 2px 10px rgba(66, 133, 244, 0.3);
        }
        
        .system-subtitle {
            color: #888;
            font-size: 14px;
            font-weight: 400;
            opacity: 0.8;
        }
        
        .form-group {
            margin-bottom: 25px;
            position: relative;
        }
        
        .form-label {
            display: block;
            color: #ccc;
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .form-input {
            width: 100%;
            padding: 16px 20px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            color: white;
            font-size: 16px;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }
        
        .form-input:focus {
            outline: none;
            border-color: #4285f4;
            background: rgba(66, 133, 244, 0.1);
            box-shadow: 
                0 0 0 3px rgba(66, 133, 244, 0.2),
                0 4px 20px rgba(66, 133, 244, 0.1);
            transform: translateY(-2px);
        }
        
        .form-input::placeholder {
            color: rgba(255, 255, 255, 0.4);
        }
        
        .login-button {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, #4285f4, #1976d2);
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 16px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 25px rgba(66, 133, 244, 0.3);
            position: relative;
            overflow: hidden;
        }
        
        .login-button:hover {
            background: linear-gradient(135deg, #3367d6, #1565c0);
            box-shadow: 0 12px 35px rgba(66, 133, 244, 0.4);
            transform: translateY(-3px);
        }
        
        .login-button:active {
            transform: translateY(-1px);
            box-shadow: 0 6px 20px rgba(66, 133, 244, 0.3);
        }
        
        .login-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.6s ease;
        }
        
        .login-button:hover::before {
            left: 100%;
        }
        
        .error-message {
            background: rgba(220, 53, 69, 0.1);
            border: 1px solid rgba(220, 53, 69, 0.3);
            border-radius: 8px;
            color: #ff6b6b;
            padding: 15px;
            margin-top: 20px;
            text-align: center;
            font-size: 14px;
            font-weight: 500;
            display: none;
            animation: shake 0.5s ease-in-out;
        }
        
        @keyframes shake {
            0%, 20%, 40%, 60%, 80% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
        }
        
        .footer {
            text-align: center;
            margin-top: 30px;
            padding-top: 25px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .footer-text {
            color: #666;
            font-size: 12px;
            line-height: 1.5;
        }
        
        .loading {
            display: none;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #4285f4;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            to { transform: translate(-50%, -50%) rotate(360deg); }
        }
        
        /* Responsive design */
        @media (max-width: 480px) {
            .login-container {
                margin: 20px;
                padding: 30px 25px;
            }
            
            .system-title {
                font-size: 24px;
            }
        }
        
        /* Additional security elements */
        .security-indicator {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 12px;
            height: 12px;
            background: #4caf50;
            border-radius: 50%;
            box-shadow: 0 0 10px #4caf50;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 10px #4caf50; }
            50% { box-shadow: 0 0 20px #4caf50, 0 0 30px #4caf50; }
            100% { box-shadow: 0 0 10px #4caf50; }
        }
    </style>
</head>
<body>
    <!-- Alien animated background particles -->
    <div class="particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <div class="login-container">
        <div class="security-indicator"></div>
        
        <div class="header">
            <div class="security-badge">🔒 Secure Access</div>
            <h1 class="system-title">Private Protected System</h1>
            <p class="system-subtitle">Authorized Personnel Only</p>
        </div>
        
        <form id="loginForm" onsubmit="handleLogin(event)">
            <div class="form-group">
                <label class="form-label">Username</label>
                <input 
                    type="text" 
                    id="username" 
                    class="form-input" 
                    placeholder="Enter your username"
                    required
                    autocomplete="username"
                >
            </div>
            
            <div class="form-group">
                <label class="form-label">Password</label>
                <input 
                    type="password" 
                    id="password" 
                    class="form-input" 
                    placeholder="Enter your password"
                    required
                    autocomplete="current-password"
                >
            </div>
            
            <button type="submit" class="login-button">
                Access System
                <div class="loading" id="loading"></div>
            </button>
            
            <div class="error-message" id="errorMessage"></div>
        </form>
        
        <div class="footer">
            <p class="footer-text">
                🔐 Multi-layer security protocol active<br>
                All access attempts are monitored and logged
            </p>
        </div>
    </div>

    <script>
        async function handleLogin(event) {
            event.preventDefault();
            
            console.log('handleLogin called');
            
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value.trim();
            const errorMessage = document.getElementById('errorMessage');
            const loading = document.getElementById('loading');
            const form = document.getElementById('loginForm');
            const submitButton = form.querySelector('.login-button');
            
            console.log('Form values:', { username: username, passwordLength: password.length });
            
            // Validate inputs
            if (!username || !password) {
                errorMessage.textContent = 'Please enter both username and password.';
                errorMessage.style.display = 'block';
                return;
            }
            
            // Show loading state
            loading.style.display = 'block';
            submitButton.disabled = true;
            submitButton.style.pointerEvents = 'none';
            errorMessage.style.display = 'none';
            
            try {
                console.log('Starting fetch request...');
                
                const response = await fetch('/api/auth', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, password }),
                    credentials: 'omit' // Don't send cookies for CORS
                });
                
                console.log('Fetch completed. Status:', response.status);
                console.log('Response headers:', response.headers);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                const result = await response.json();
                console.log('Parsed response:', result);
                
                if (result.success && result.token) {
                    console.log('Login successful, storing token...');
                    // Store authentication token
                    sessionStorage.setItem('authToken', result.token);
                    sessionStorage.setItem('authenticated', 'true');
                    
                    console.log('Redirecting to dashboard...');
                    // Small delay to ensure session storage is set
                    setTimeout(() => {
                        window.location.href = '/dashboard.html';
                    }, 100);
                } else {
                    console.log('Login failed:', result);
                    // Show error message
                    errorMessage.textContent = result.message || 'Invalid credentials. Access denied.';
                    errorMessage.style.display = 'block';
                    
                    // Only clear password on failure
                    document.getElementById('password').value = '';
                    document.getElementById('password').focus();
                }
            } catch (error) {
                console.error('Login error details:', error);
                errorMessage.textContent = `Connection error: ${error.message}`;
                errorMessage.style.display = 'block';
                
                // Don't clear form on connection errors
            } finally {
                // Hide loading state
                console.log('Cleaning up loading state...');
                loading.style.display = 'none';
                submitButton.disabled = false;
                submitButton.style.pointerEvents = 'auto';
            }
        }
        
        // Add enter key support  
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, setting up form...');
            
            const form = document.getElementById('loginForm');
            const usernameField = document.getElementById('username');
            const passwordField = document.getElementById('password');
            
            // Add form submit listener as backup
            form.addEventListener('submit', function(e) {
                console.log('Form submit event triggered');
                handleLogin(e);
            });
            
            // Add manual button click listener as backup
            const submitButton = form.querySelector('.login-button');
            submitButton.addEventListener('click', function(e) {
                console.log('Submit button clicked');
                if (e.target.type === 'submit') {
                    // Let form submission handle it
                    return;
                }
                e.preventDefault();
                handleLogin(e);
            });
            
            usernameField.focus();
            
            // Add some additional visual effects
            const inputs = document.querySelectorAll('.form-input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.02)';
                    this.parentElement.style.transition = 'transform 0.2s ease';
                });
                
                input.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });
            });
        });
    </script>
</body>
</html>