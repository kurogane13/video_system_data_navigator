================================================================================
VIDEO LIBRARY & FILE MANAGEMENT SYSTEM - SETUP GUIDE
================================================================================

OVERVIEW:
Secure video streaming and file management system with authentication, 
uploads, terminal access, API testing, and storage management.

================================================================================
üèóÔ∏è QUICK START
================================================================================

DIRECTORY STRUCTURE:
/home/$USER/video-system/
‚îú‚îÄ‚îÄ videos/         # Video files (MP4, WebM, AVI, MOV, MKV, FLV)
‚îú‚îÄ‚îÄ docs/          # Web interface files
‚îú‚îÄ‚îÄ scripts/       # Python API server
‚îî‚îÄ‚îÄ logs/          # System and debug logs

SERVICES:
- Nginx (Port 10000): Static files and reverse proxy
- Python API Server (Port 9090): Authentication and file operations
- Access: http://your-server:10000

================================================================================
üîê AUTHENTICATION
================================================================================

CREDENTIALS FILE: ~/.crds
Format: username:password

To change credentials:
1. Edit: nano ~/.crds
2. Format: newuser:newpassword
3. No restart required

SECURITY: Session tokens, encrypted passwords, protected API endpoints

================================================================================
üåê WEB INTERFACE FEATURES
================================================================================

VIDEO LIBRARY:
‚úÖ Stream videos directly in browser
‚úÖ Video metadata display (size, duration)
‚úÖ Play controls (play/pause, restart, mute, fullscreen)
‚úÖ Search and filter videos
‚úÖ Bulk operations and downloads

FILE EXPLORER:
‚úÖ Browse file system with breadcrumb navigation
‚úÖ Create, delete, rename files and folders
‚úÖ Multi-file selection and bulk operations
‚úÖ Download individual files or zip archives

UPLOAD SYSTEM:
‚úÖ Video uploads with format validation
‚úÖ General file uploads to any directory
‚úÖ Drag-and-drop interface
‚úÖ Progress tracking and error handling

STORAGE MANAGEMENT:
‚úÖ Real-time storage capacity monitoring
‚úÖ Disk quota reserve configuration
‚úÖ Upload limit calculations
‚úÖ Storage status across all sections

üÜï TERMINAL ACCESS:
‚úÖ Integrated web terminal with session persistence
‚úÖ Execute shell commands directly from browser
‚úÖ Multi-session support with working directory tracking
‚úÖ Secure authenticated terminal access

üÜï API TESTING MODULE:
‚úÖ Interactive API call interface
‚úÖ Pre-configured curl commands
‚úÖ Test authentication, file operations, uploads
‚úÖ Copy-paste ready curl commands for external use

üÜï LOGGING & DEBUGGING:
‚úÖ Comprehensive debug logging system
‚úÖ Modal debug log viewer in UI
‚úÖ Action logging and request tracking
‚úÖ Real-time log monitoring

================================================================================
üöÄ SYSTEM MANAGEMENT
================================================================================

START SERVICES:
sudo systemctl start nginx
cd /home/$USER/video-system/scripts && python3 auth_api_server.py &

STOP SERVICES:
sudo systemctl stop nginx
pkill -f auth_api_server.py

CHECK STATUS:
sudo systemctl status nginx
ps aux | grep auth_api_server

VIEW LOGS:
tail -f /home/$USER/video-system/logs/debug.log
# Or use the UI debug log viewer

================================================================================
üîß CONFIGURATION
================================================================================

DISK QUOTA MANAGEMENT:
- Access via "üíΩ Disk quota reserve limit" buttons
- Set reserved disk space to prevent system crashes
- Automatic upload limit calculations
- Persistent configuration across reboots
- Located: /home/$USER/video-system/docs/reserved_value.txt

NGINX CONFIG: /etc/nginx/sites-available/video-library
API SERVER: /home/$USER/video-system/scripts/auth_api_server.py

FILE PERMISSIONS:
sudo chown -R $USER:$USER /home/$USER/video-system/
chmod +x /home/$USER/video-system/scripts/*.py

FIREWALL:
sudo ufw allow 10000/tcp
sudo ufw allow 9090/tcp

================================================================================
üêõ TROUBLESHOOTING
================================================================================

COMMON ISSUES:

Authentication Failed:
- Check ~/.crds file format
- Verify credentials
- Clear browser cache

Videos Not Loading:
- Check file permissions
- Verify video formats (MP4, WebM, AVI, MOV, MKV, FLV)
- Check /home/$USER/video-system/videos/ directory

Server Connection Issues:
- Verify services are running
- Check firewall settings: sudo ufw status
- Check logs: tail -f /home/$USER/video-system/logs/debug.log

Upload Failures:
- Check disk space
- Verify upload directory permissions
- Check storage quota settings

Terminal Not Working:
- Verify authentication
- Check server logs
- Ensure websocket connection

API Calls Failing:
- Check authentication headers
- Verify endpoint URLs
- Use API testing module for debugging

DEBUG LOG ACCESS:
- Use "üîç View Debug Logs" button in UI
- Or check: /home/$USER/video-system/logs/debug.log
- Real-time monitoring available in web interface

================================================================================
üéØ NEW FEATURES QUICK ACCESS
================================================================================

TERMINAL: Click "üíª Terminal" button for web-based shell access
API TESTING: Click "üì° API Calls" for interactive API testing interface
DEBUG LOGS: Click "üîç View Debug Logs" for real-time log monitoring
STORAGE QUOTAS: Click "üíΩ Disk quota reserve limit" for storage management

================================================================================
üìû SUPPORT
================================================================================

All features are accessible through the main dashboard interface.
Check debug logs for detailed error information.
Use terminal access for direct system troubleshooting.

System Path: /home/$USER/video-system/
Main Interface: http://your-server:10000
API Endpoint: http://your-server:9090

================================================================================
